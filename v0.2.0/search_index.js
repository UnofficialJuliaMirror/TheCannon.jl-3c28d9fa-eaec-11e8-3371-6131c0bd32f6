var documenterSearchIndex = {"docs":
[{"location":"#functions-1","page":"-","title":"functions","text":"","category":"section"},{"location":"#","page":"-","title":"-","text":"expanded_size\ncollapsed_size\nexpand_labels\nstandardize_labels\nunstandardize_labels\ntrain\ninfer\nquad_coeff_matrix","category":"page"},{"location":"#TheCannon.expanded_size","page":"-","title":"TheCannon.expanded_size","text":"expandeded_size(nlabels; quadratic=true)\n\nThe length of a label vector of length nlabels after it has been  quadratically expanded.\n\nSee also: collapsed_size\n\n\n\n\n\n","category":"function"},{"location":"#TheCannon.collapsed_size","page":"-","title":"TheCannon.collapsed_size","text":"collapsed_size(nelabels; quadratic=true)\n\nThe length of a label vector corresponding to an expanded label  vector of length nelabels.\n\nSee also: expanded_size\n\n\n\n\n\n","category":"function"},{"location":"#TheCannon.train","page":"-","title":"TheCannon.train","text":"train(flux, ivar, labels)\n\nreturns: theta, scatters Run the training step of The Cannon, i.e. calculate coefficients for each pixel.\n\nflux contains the spectra for each pixel in the training set.  It should be   nstars x npixels (row-vectors are spectra)\nivar contains the inverse variance for each pixel in the same shape as flux\nlabels contains the labels for each star.  It should be nstars x nlabels.  It will be expanded into the quadratic label space before training.\n\n\n\n\n\n","category":"function"},{"location":"#TheCannon.infer","page":"-","title":"TheCannon.infer","text":"infer(flux, ivar, theta, scatters)\n\nRun the test step of the cannon. Given a Cannon model (from training), infer stellar parameters\n\n\n\n\n\n","category":"function"},{"location":"#TheCannon.quad_coeff_matrix","page":"-","title":"TheCannon.quad_coeff_matrix","text":"Get the quadratic terms of theta as matrices. returns an array of dimensions nlabels x nlabels x npixels\n\nQ = quadcoeffmatrix(theta)    Q[:, :, 1] #quadratic coefficients for first pixel\n\n\n\n\n\n","category":"function"}]
}
